(window.webpackJsonp=window.webpackJsonp||[]).push([[14,23],{22:function(t,i,n){"use strict";n.r(i),n.d(i,"BrushStatus",(function(){return s})),n.d(i,"BrushType",(function(){return e})),n.d(i,"AbstractBrush",(function(){return a}));class s{constructor(t,i,n,s,e){this.x=t,this.y=i,this.pressure=n,this.tiltX=s,this.tiltY=e}}let e;!function(t){t[t.pen=1]="pen",t[t.selector=2]="selector"}(e||(e={}));class a{constructor(t,i){this.type=t,this.name=i}init(){}destory(){}onStart(t,i){}onDraw(t,i){}onEnd(t,i){}}},3:function(t,i,n){"use strict";n.r(i),n.d(i,"Brush",(function(){return e}));var s=n(22);class e{constructor(){this.type=s.BrushType.pen,this.name="default",this.isPainting=!1,this.pathList=[],this.animeHandle=void 0,this.paintPath=t=>{t.clearRect(0,0,t.canvas.width,t.canvas.height),t.beginPath();const i=this.pathList[0];t.moveTo(i.x,i.y);for(let i=1;i<this.pathList.length;i++){const{x:n,y:s}=this.pathList[i];t.lineTo(n,s)}t.stroke()}}init(){}destory(){}onStart(t,i){requestAnimationFrame(()=>{const{curCanvasContext2D:n,color:s,brushWidth:e}=i;this.isPainting=!0,this.pathList.push(t),n.strokeStyle=s,n.lineWidth=e,n.lineCap="round",n.lineJoin="round"})}onDraw(t,i){if(this.isPainting){const{curCanvasContext2D:n}=i;for(let i=0;i<t.length;i++)this.pathList.push(t[i]);cancelAnimationFrame(this.animeHandle),this.animeHandle=requestAnimationFrame(()=>{this.paintPath(n)})}}onEnd(t,{onBrushEnd:i}){requestAnimationFrame(()=>{this.isPainting=!1,this.pathList.length>1&&i(),this.pathList=[]})}}}}]);